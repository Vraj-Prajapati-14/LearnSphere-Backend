// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   // "Student" or "Instructor"
  createdAt DateTime @default(now())
  courses   Course[] @relation("InstructorCourses")
  enrollments Enrollment[]
}

model Course {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  category    String
  instructorId Int
  instructor  User     @relation("InstructorCourses", fields: [instructorId], references: [id])
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  sessions    Session[]
  enrollments Enrollment[]
}

model Session {
  id          Int      @id @default(autoincrement())
  title       String
  youtubeLink String
  explanation String   // Rich text content
  courseId    Int
  course      Course   @relation(fields: [courseId], references: [id])
  createdAt   DateTime @default(now())
}

model Enrollment {
  id          Int      @id @default(autoincrement())
  userId      Int
  courseId    Int
  user        User     @relation(fields: [userId], references: [id])
  course      Course   @relation(fields: [courseId], references: [id])
  completedSessions Int[]  // Array of session IDs marked as completed
  createdAt   DateTime @default(now())
}